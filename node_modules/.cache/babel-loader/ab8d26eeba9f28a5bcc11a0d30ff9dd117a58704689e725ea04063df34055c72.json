{"ast":null,"code":"var _jsxFileName = \"C:\\\\real-estate-reunion\\\\src\\\\components\\\\HouseContext.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, createContext } from 'react';\n\n// dummy data\nimport { housesData } from '../data';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const HouseContext = /*#__PURE__*/createContext();\nconst HouseContextProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [houses, setHouses] = useState(housesData);\n  const [country, setCountry] = useState('Location (any)');\n  const [countries, setCountries] = useState([]);\n  const [property, setProperty] = useState('Property type (any)');\n  const [properties, setProperties] = useState([]);\n  const [price, setPrice] = useState('Price range (any)');\n  const [date, setDate] = useState('Date (any)');\n  const [loading, setLoading] = useState(false);\n\n  // countries state\n  useEffect(() => {\n    const allCountries = houses.map(house => {\n      return house.country;\n    });\n    // remove duplicates\n    const uniqueCountries = ['Location (any)', ...new Set(allCountries)];\n    setCountries(uniqueCountries); // new unique coutnries \n  }, [houses]);\n\n  // properties state\n  useEffect(() => {\n    const allProperties = houses.map(house => {\n      return house.type;\n    });\n    // remove duplicates\n    const uniqueProperties = ['Property (any)', ...new Set(allProperties)];\n    setProperties(uniqueProperties); // new unique coutnries \n  }, [houses]);\n\n  // date state\n  useEffect(() => {\n    const allDate = houses.map(house => {\n      return house.availableFrom;\n    });\n    // remove duplicates\n    const uniqueDate = ['Date (any)', ...new Set(allDate)];\n    setDate(uniqueDate); // new unique date \n    console.log(uniqueDate);\n  }, [houses]);\n  const handleClick = () => {\n    setLoading(true);\n\n    //  function to check if the string is includes \"any\"\n    const isDefault = str => {\n      return str.split(' ').includes('(any)');\n    };\n    // initial value to integer\n    const minPrice = parseInt(price.split(' ')[0]);\n\n    // second value to integer\n    const maxPrice = parseInt(price.split(' ')[2]);\n    const newHouses = housesData.filter(house => {\n      const housePrice = parseInt(house.price);\n      if (house.country === country && house.type === property && housePrice >= minPrice && housePrice <= maxPrice) {\n        return house;\n      }\n      //  if country all are defaullt\n      if (isDefault(country) && isDefault(property) && isDefault(price)) {\n        return house;\n      }\n      // if country is not default\n      if (!isDefault(country) && isDefault(property) && isDefault(price)) {\n        return house.country === country;\n      }\n\n      // if property is not default\n      if (!isDefault(property) && isDefault(country) && isDefault(price)) {\n        return house.type === property;\n      }\n      // if price is not default\n      if (!isDefault(price) && isDefault(country) && isDefault(property)) {\n        if (housePrice >= minPrice && housePrice <= maxPrice) {\n          return house;\n        }\n      }\n      // if country and price is not default\n      if (!isDefault(country) && !isDefault(property) && isDefault(price)) {\n        return house.country === country && house.type === property;\n      }\n\n      // if country and price is not default\n      if (!isDefault(country) && !isDefault(price) && isDefault(property)) {\n        if (housePrice >= minPrice && housePrice <= maxPrice) {\n          return house.country === country;\n        }\n      }\n      //  property and price is not default\n      if (!isDefault(property) && !isDefault(price) && isDefault(country)) {\n        if (housePrice >= minPrice && housePrice <= maxPrice) {\n          return house.type === property;\n        }\n      }\n    });\n    setTimeout(() => {\n      return newHouses.length < 1 ? setHouses([]) : setHouses(newHouses), setLoading(false);\n    }, 1000);\n  };\n  return /*#__PURE__*/_jsxDEV(HouseContext.Provider, {\n    value: {\n      country,\n      setCountry,\n      countries,\n      property,\n      setProperty,\n      properties,\n      price,\n      setPrice,\n      houses,\n      loading,\n      handleClick\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 10\n  }, this);\n};\n_s(HouseContextProvider, \"j8aB7IHGfQ76BGvsA8/5Q5IGApc=\");\n_c = HouseContextProvider;\nexport default HouseContextProvider;\nvar _c;\n$RefreshReg$(_c, \"HouseContextProvider\");","map":{"version":3,"names":["React","useState","useEffect","createContext","housesData","HouseContext","HouseContextProvider","children","houses","setHouses","country","setCountry","countries","setCountries","property","setProperty","properties","setProperties","price","setPrice","date","setDate","loading","setLoading","allCountries","map","house","uniqueCountries","Set","allProperties","type","uniqueProperties","allDate","availableFrom","uniqueDate","console","log","handleClick","isDefault","str","split","includes","minPrice","parseInt","maxPrice","newHouses","filter","housePrice","setTimeout","length"],"sources":["C:/real-estate-reunion/src/components/HouseContext.js"],"sourcesContent":["import React,{useState,useEffect, createContext} from 'react';\r\n\r\n// dummy data\r\nimport {housesData} from '../data';\r\n\r\n\r\nexport const HouseContext = createContext();\r\nconst HouseContextProvider = ({children}) => {\r\n  const [houses, setHouses] = useState(housesData);\r\n  const [country, setCountry] = useState('Location (any)');\r\n  const[countries, setCountries] = useState([]);\r\n  const [property, setProperty] = useState('Property type (any)');\r\n  const [properties, setProperties] = useState([]);\r\n  const [price, setPrice] = useState('Price range (any)');\r\n  const[date, setDate] = useState('Date (any)');\r\n  const [loading, setLoading] = useState(false);\r\n  \r\n  // countries state\r\n  useEffect(()=>{\r\n    const allCountries = houses.map((house)=>{\r\n      return house.country;\r\n\r\n    });\r\n    // remove duplicates\r\n    const uniqueCountries = ['Location (any)', ...new Set(allCountries)]\r\n    setCountries(uniqueCountries) // new unique coutnries \r\n  }, [houses]);\r\n\r\n  // properties state\r\n  useEffect(()=>{\r\n    const allProperties = houses.map((house)=>{\r\n      return house.type;\r\n\r\n    });\r\n    // remove duplicates\r\n    const uniqueProperties = ['Property (any)', ...new Set(allProperties)]\r\n    setProperties(uniqueProperties) // new unique coutnries \r\n  }, [houses]);\r\n  \r\n    // date state\r\n    useEffect(()=>{\r\n      const allDate = houses.map((house)=>{\r\n        return house.availableFrom;\r\n  \r\n      });\r\n      // remove duplicates\r\n      const uniqueDate = ['Date (any)', ...new Set(allDate)]\r\n      setDate(uniqueDate) // new unique date \r\n      console.log(uniqueDate);\r\n    }, [houses]);\r\n    \r\n  \r\n  const handleClick = () =>{\r\n  setLoading(true);\r\n\r\n    //  function to check if the string is includes \"any\"\r\n    const isDefault = (str) =>{\r\n      return str.split(' ').includes('(any)');\r\n    };\r\n    // initial value to integer\r\n    const minPrice = parseInt(price.split(' ')[0]);\r\n    \r\n    // second value to integer\r\n    const maxPrice = parseInt(price.split(' ')[2]);\r\n    \r\n    const newHouses = housesData.filter((house)=>{\r\n      const housePrice = parseInt(house.price);\r\n\r\n      if(\r\n        house.country === country && \r\n        house.type === property &&\r\n        housePrice>= minPrice && \r\n        housePrice<=maxPrice\r\n      ){\r\n        return house;\r\n      }\r\n    //  if country all are defaullt\r\n     if(isDefault(country) && isDefault(property)\r\n     && isDefault(price)){\r\n      return house;\r\n     }\r\n      // if country is not default\r\n      if(!isDefault(country) && isDefault(property)\r\n      && isDefault(price)){\r\n        return house.country === country;\r\n      }\r\n     \r\n      // if property is not default\r\n      if(!isDefault(property) && isDefault(country)\r\n      && isDefault(price)){\r\n        return house.type === property;\r\n      }\r\n      // if price is not default\r\n      if(!isDefault(price)&& isDefault(country)\r\n      && isDefault(property)){\r\n        if(housePrice>=minPrice && housePrice<=maxPrice){\r\n            return house;\r\n        }\r\n      }\r\n      // if country and price is not default\r\n      if(!isDefault(country) && !isDefault(property)\r\n      && isDefault(price)){\r\n        return house.country === country && house.type === property;\r\n      }\r\n\r\n      // if country and price is not default\r\n      if(!isDefault(country) && !isDefault(price)\r\n      && isDefault(property)){\r\n        if(housePrice >=minPrice && housePrice<= maxPrice){\r\n          return house.country === country;\r\n        }\r\n      }\r\n      //  property and price is not default\r\n      if(!isDefault(property) && !isDefault(price)\r\n      && isDefault(country)){\r\n        if(housePrice>= minPrice && housePrice<=maxPrice)\r\n     {\r\n        return house.type === property;\r\n      }\r\n    }\r\n\r\n    });\r\n\r\n    setTimeout(()=>{\r\n      return newHouses.length <1? setHouses([]):\r\n      setHouses(newHouses),\r\n      setLoading(false)\r\n    }, 1000);\r\n  };\r\n\r\n  return <HouseContext.Provider \r\n  value={{\r\n    country,\r\n    setCountry,\r\n    countries,\r\n    property,\r\n    setProperty,\r\n    properties,\r\n    price,\r\n    setPrice,\r\n    houses,\r\n    loading,\r\n    handleClick,\r\n  }}>\r\n    {children}</HouseContext.Provider>;\r\n};\r\n\r\nexport default HouseContextProvider;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAEC,QAAQ,EAACC,SAAS,EAAEC,aAAa,QAAO,OAAO;;AAE7D;AACA,SAAQC,UAAU,QAAO,SAAS;AAAC;AAGnC,OAAO,MAAMC,YAAY,gBAAGF,aAAa,EAAE;AAC3C,MAAMG,oBAAoB,GAAG,QAAgB;EAAA;EAAA,IAAf;IAACC;EAAQ,CAAC;EACtC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAACG,UAAU,CAAC;EAChD,MAAM,CAACM,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,gBAAgB,CAAC;EACxD,MAAK,CAACW,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC7C,MAAM,CAACa,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,qBAAqB,CAAC;EAC/D,MAAM,CAACe,UAAU,EAAEC,aAAa,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACiB,KAAK,EAAEC,QAAQ,CAAC,GAAGlB,QAAQ,CAAC,mBAAmB,CAAC;EACvD,MAAK,CAACmB,IAAI,EAAEC,OAAO,CAAC,GAAGpB,QAAQ,CAAC,YAAY,CAAC;EAC7C,MAAM,CAACqB,OAAO,EAAEC,UAAU,CAAC,GAAGtB,QAAQ,CAAC,KAAK,CAAC;;EAE7C;EACAC,SAAS,CAAC,MAAI;IACZ,MAAMsB,YAAY,GAAGhB,MAAM,CAACiB,GAAG,CAAEC,KAAK,IAAG;MACvC,OAAOA,KAAK,CAAChB,OAAO;IAEtB,CAAC,CAAC;IACF;IACA,MAAMiB,eAAe,GAAG,CAAC,gBAAgB,EAAE,GAAG,IAAIC,GAAG,CAACJ,YAAY,CAAC,CAAC;IACpEX,YAAY,CAACc,eAAe,CAAC,EAAC;EAChC,CAAC,EAAE,CAACnB,MAAM,CAAC,CAAC;;EAEZ;EACAN,SAAS,CAAC,MAAI;IACZ,MAAM2B,aAAa,GAAGrB,MAAM,CAACiB,GAAG,CAAEC,KAAK,IAAG;MACxC,OAAOA,KAAK,CAACI,IAAI;IAEnB,CAAC,CAAC;IACF;IACA,MAAMC,gBAAgB,GAAG,CAAC,gBAAgB,EAAE,GAAG,IAAIH,GAAG,CAACC,aAAa,CAAC,CAAC;IACtEZ,aAAa,CAACc,gBAAgB,CAAC,EAAC;EAClC,CAAC,EAAE,CAACvB,MAAM,CAAC,CAAC;;EAEV;EACAN,SAAS,CAAC,MAAI;IACZ,MAAM8B,OAAO,GAAGxB,MAAM,CAACiB,GAAG,CAAEC,KAAK,IAAG;MAClC,OAAOA,KAAK,CAACO,aAAa;IAE5B,CAAC,CAAC;IACF;IACA,MAAMC,UAAU,GAAG,CAAC,YAAY,EAAE,GAAG,IAAIN,GAAG,CAACI,OAAO,CAAC,CAAC;IACtDX,OAAO,CAACa,UAAU,CAAC,EAAC;IACpBC,OAAO,CAACC,GAAG,CAACF,UAAU,CAAC;EACzB,CAAC,EAAE,CAAC1B,MAAM,CAAC,CAAC;EAGd,MAAM6B,WAAW,GAAG,MAAK;IACzBd,UAAU,CAAC,IAAI,CAAC;;IAEd;IACA,MAAMe,SAAS,GAAIC,GAAG,IAAI;MACxB,OAAOA,GAAG,CAACC,KAAK,CAAC,GAAG,CAAC,CAACC,QAAQ,CAAC,OAAO,CAAC;IACzC,CAAC;IACD;IACA,MAAMC,QAAQ,GAAGC,QAAQ,CAACzB,KAAK,CAACsB,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;;IAE9C;IACA,MAAMI,QAAQ,GAAGD,QAAQ,CAACzB,KAAK,CAACsB,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IAE9C,MAAMK,SAAS,GAAGzC,UAAU,CAAC0C,MAAM,CAAEpB,KAAK,IAAG;MAC3C,MAAMqB,UAAU,GAAGJ,QAAQ,CAACjB,KAAK,CAACR,KAAK,CAAC;MAExC,IACEQ,KAAK,CAAChB,OAAO,KAAKA,OAAO,IACzBgB,KAAK,CAACI,IAAI,KAAKhB,QAAQ,IACvBiC,UAAU,IAAGL,QAAQ,IACrBK,UAAU,IAAEH,QAAQ,EACrB;QACC,OAAOlB,KAAK;MACd;MACF;MACC,IAAGY,SAAS,CAAC5B,OAAO,CAAC,IAAI4B,SAAS,CAACxB,QAAQ,CAAC,IACzCwB,SAAS,CAACpB,KAAK,CAAC,EAAC;QACnB,OAAOQ,KAAK;MACb;MACC;MACA,IAAG,CAACY,SAAS,CAAC5B,OAAO,CAAC,IAAI4B,SAAS,CAACxB,QAAQ,CAAC,IAC1CwB,SAAS,CAACpB,KAAK,CAAC,EAAC;QAClB,OAAOQ,KAAK,CAAChB,OAAO,KAAKA,OAAO;MAClC;;MAEA;MACA,IAAG,CAAC4B,SAAS,CAACxB,QAAQ,CAAC,IAAIwB,SAAS,CAAC5B,OAAO,CAAC,IAC1C4B,SAAS,CAACpB,KAAK,CAAC,EAAC;QAClB,OAAOQ,KAAK,CAACI,IAAI,KAAKhB,QAAQ;MAChC;MACA;MACA,IAAG,CAACwB,SAAS,CAACpB,KAAK,CAAC,IAAGoB,SAAS,CAAC5B,OAAO,CAAC,IACtC4B,SAAS,CAACxB,QAAQ,CAAC,EAAC;QACrB,IAAGiC,UAAU,IAAEL,QAAQ,IAAIK,UAAU,IAAEH,QAAQ,EAAC;UAC5C,OAAOlB,KAAK;QAChB;MACF;MACA;MACA,IAAG,CAACY,SAAS,CAAC5B,OAAO,CAAC,IAAI,CAAC4B,SAAS,CAACxB,QAAQ,CAAC,IAC3CwB,SAAS,CAACpB,KAAK,CAAC,EAAC;QAClB,OAAOQ,KAAK,CAAChB,OAAO,KAAKA,OAAO,IAAIgB,KAAK,CAACI,IAAI,KAAKhB,QAAQ;MAC7D;;MAEA;MACA,IAAG,CAACwB,SAAS,CAAC5B,OAAO,CAAC,IAAI,CAAC4B,SAAS,CAACpB,KAAK,CAAC,IACxCoB,SAAS,CAACxB,QAAQ,CAAC,EAAC;QACrB,IAAGiC,UAAU,IAAGL,QAAQ,IAAIK,UAAU,IAAGH,QAAQ,EAAC;UAChD,OAAOlB,KAAK,CAAChB,OAAO,KAAKA,OAAO;QAClC;MACF;MACA;MACA,IAAG,CAAC4B,SAAS,CAACxB,QAAQ,CAAC,IAAI,CAACwB,SAAS,CAACpB,KAAK,CAAC,IACzCoB,SAAS,CAAC5B,OAAO,CAAC,EAAC;QACpB,IAAGqC,UAAU,IAAGL,QAAQ,IAAIK,UAAU,IAAEH,QAAQ,EACnD;UACG,OAAOlB,KAAK,CAACI,IAAI,KAAKhB,QAAQ;QAChC;MACF;IAEA,CAAC,CAAC;IAEFkC,UAAU,CAAC,MAAI;MACb,OAAOH,SAAS,CAACI,MAAM,GAAE,CAAC,GAAExC,SAAS,CAAC,EAAE,CAAC,GACzCA,SAAS,CAACoC,SAAS,CAAC,EACpBtB,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,EAAE,IAAI,CAAC;EACV,CAAC;EAED,oBAAO,QAAC,YAAY,CAAC,QAAQ;IAC7B,KAAK,EAAE;MACLb,OAAO;MACPC,UAAU;MACVC,SAAS;MACTE,QAAQ;MACRC,WAAW;MACXC,UAAU;MACVE,KAAK;MACLC,QAAQ;MACRX,MAAM;MACNc,OAAO;MACPe;IACF,CAAE;IAAA,UACC9B;EAAQ;IAAA;IAAA;IAAA;EAAA,QAAyB;AACtC,CAAC;AAAC,GA1IID,oBAAoB;AAAA,KAApBA,oBAAoB;AA4I1B,eAAeA,oBAAoB;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}